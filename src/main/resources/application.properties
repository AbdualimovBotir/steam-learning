# =======================================
# SPRING APPLICATION CONFIGURATION
# =======================================
spring.application.name=steam-learning

# =======================================
# SERVER CONFIGURATION
# =======================================
server.port=8080
# server.servlet.context-path=/api  # Ixtiyoriy: ilova konteks yo?li

# =======================================
# DATABASE (PostgreSQL)
# =======================================
spring.datasource.url=jdbc:postgresql://localhost:5432/steam_learning_db
spring.datasource.username=steam_learning_db
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

# =======================================
# JPA & HIBERNATE
# =======================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# =======================================
# FILE UPLOAD CONFIGURATION
# =======================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB

# =======================================
# JWT / SECURITY SETTINGS (Agar JWT ishlatilsa)
# =======================================
jwt.secret=verySecretKeyForJWT123456
jwt.expiration=86400000  # 1 kun (millisekundda)

# =======================================
# LOGGING
# =======================================
logging.level.org.springframework=INFO
logging.level.com.example=DEBUG

# =======================================
# CORS CONFIGURATION (Agar frontend alohida bo?lsa)
# =======================================
# CORS sozlamalari WebSecurityConfig.java ichida belgilanadi

# =======================================
# SWAGGER (Agar ishlatilsa)
# =======================================
# springdoc.api-docs.enabled=true
# springdoc.swagger-ui.enabled=true

# =======================================
# GOOGLE OAUTH2 CONFIGURATION
# =======================================
spring.security.oauth2.client.registration.google.client-id=44788125218-mtdui57431cv7f9eivc1jdbj0qmke4c9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google


spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email
